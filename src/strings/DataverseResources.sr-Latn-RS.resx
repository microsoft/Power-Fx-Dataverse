<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="DV_resmimetype">text/microsoft-resx</resheader>
    <resheader name="DV_version">2.0</resheader>
    <resheader name="DV_reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="DV_writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="FormulaColumns_NotSupported" xml:space="preserve">
    <value>Nije podržano u kolonama formula.</value>
    <comment>Error Message. Used in formula columns for scenarios where there the full PowerApps support is not available.</comment>
  </data>
  <data name="FormulaColumns_MathFunctionBadArity" xml:space="preserve">
    <value>Nevažeći broj argumenata za funkciju {0}: primljeno {1}, očekivano {2}</value>
    <comment>Error Message. Used in formula columns for scenarios where an invalid number of arguments is supplied to a math function. The {0} will be the name of the function. The {1} will be the incorrect number of arguments received. The {2} will be the correct number of args expected. </comment>
  </data>
  <data name="FormulaColumns_ArgNotSupported" xml:space="preserve">
    <value>Argument {0} nije podržan za funkciju {1} u kolonama formula.</value>
    <comment>Error Message. Used in formula columns for arguments that are not supported there.  The {0} will be the name of the argument that is not supported.  The {1} will be the name of the function.</comment>
  </data>
  <data name="FormulaColumns_ArgTypeNotSupported" xml:space="preserve">
    <value>Nije moguće proslediti ovaj argument kao ovaj tip u kolonama formula.</value>
    <comment>Error Message. Used in formula columns for an argument where the type is not supported. {0} is the attempted type the argument is being coerced to.</comment>
  </data>
  <data name="FormulaColumns_ArgumentTypeNotSupported" xml:space="preserve">
    <value>Nije moguće proslediti ovaj argument kao tip {0} u kolonama formula.</value>
    <comment>Error Message. Used in formula columns for an argument where the type is not supported. {0} is the attempted type the argument is being coerced to.</comment>
  </data>
  <data name="FormulaColumns_LiteralArgRequired" xml:space="preserve">
    <value>Za ovaj argument je podržana samo vrednost literala.</value>
    <comment>Error Message. Used in formula columns for arguments where the value supplied must be a literal value (for example, a number or a string), instead of a calculation.</comment>
  </data>
  <data name="FormulaColumns_TimeZoneConversion" xml:space="preserve">
    <value>{0} nije moguće izvršiti na ovom unosu bez konverzije vremenske zone, koja nije podržana u kolonama formula.</value>
    <comment>Error Message. Used in formula columns for scenarios where time zone conversion is needed to perform the operation. The {0} will be the name of the function.</comment>
  </data>
  <data name="FormulaColumns_IncompatibleDateTimes" xml:space="preserve">
    <value>Ovu operaciju nije moguće izvršiti na vrednostima koje imaju različita ponašanja datuma i vremena.</value>
    <comment>Error Message. Used in formula columns for scenarios where values of different Date Time Behaviors are used together, which is not supported</comment>
  </data>
  <data name="FormulaColumns_DateTimeFormatNotSupported" xml:space="preserve">
    <value>U kolonama formula podržane su samo niske kratkog formata datuma i vremena.</value>
    <comment>Error Message. Used in formula columns for scenarios where the maker supplies an invalid format string</comment>
  </data>
  <data name="FormulaColumns_InvalidTimeUnit" xml:space="preserve">
    <value>Argument {0} je nevažeća/nepodržana jedinica vremena za funkciju aritmetičkog datuma {1}.</value>
    <comment>Error Message. Used in formula columns for scenarios where the maker supplies an unsupported unit of time to the DateAdd or DateDiff function. The {0} will be the name of the argument. The {1} will be the name of the function.</comment>
  </data>
  <data name="FormulaColumns_NumericFormatNotSupported" xml:space="preserve">
    <value>Tokeni oblikovanja specifični za lokalni standard, kao što su „.“ i „,“ nisu podržani u kolonama formula.</value>
    <comment>Error Message. Used in formula columns for scenarios where the maker supplies an invalid format string</comment>
  </data>
  <data name="FormulaColumns_FunctionNotSupported" xml:space="preserve">
    <value>Funkcija {0} nije podržana u kolonama formula, koristite {1} umesto nje.</value>
    <comment>Error Message. Used in formula columns for scenarios where the maker attempts to use a function that is not supported, providing an alternate function name.  The {0} will be the name of the function that is not supported, and {1} is the name of the suggested alternate.</comment>
  </data>
  <data name="FormulaColumns_FunctionSupportDisabled" xml:space="preserve">
    <value>Funkcija {0} nije podržana u kolonama sa formulama.</value>
    <comment>Error Message. Used in formula columns for scenarios where the maker attempts to use a function that is not supported. The {0} will be the name of the function that is not supported.</comment>
  </data>
  <data name="FormulaColumns_OperationNotSupported" xml:space="preserve">
    <value>Nije moguće izvršiti ovu operaciju na tipu {0} u kolonama formule.</value>
    <comment>Error Message. Used in formula columns for scenarios where the maker attempts to perform an unsupported operatiom. The {0} will be the type the operation is not supported for.</comment>
  </data>
  <data name="FormulaColumns_ResultTypeNotSupported" xml:space="preserve">
    <value>Tip rezultata {0} nije podržan u kolonama sa formulama.</value>
    <comment>Error Message. Used in formula columns for a formula that returns a type which is not supported.</comment>
  </data>
  <data name="FormulaColumns_RecordAccessNotSupported" xml:space="preserve">
    <value>Direktno upućivanje na ceo zapis nije podržano u kolonama formula. Postavite važeće polje u zapisu kao referencu.</value>
    <comment>Error Message. Used in formula columns for scenarios where the maker attempts to reference an entire record instead of a specific field.</comment>
  </data>
  <data name="FormulaColumns_ResultTypeMustMatch" xml:space="preserve">
    <value>Očekivani tip rezultata za ovu formulu je {0}, ali je stvarni tip rezultata {1}. Nije moguće promeniti tip rezultata kolone formule.</value>
    <comment>Error Message. Used in formula columns for a formula that returns an unexpected result type during editing. The {0} will be the name of the required type. The {1} will be the name of the incorrect type.</comment>
  </data>
  <data name="FormulaColumns_ColumnTypeNotSupported" xml:space="preserve">
    <value>Kolone tipa {0} nisu podržane u kolonama sa formulama.</value>
    <comment>Error Message. Used in formula columns for a formula where the maker attempts to use a column from Dataverse that is not supported, such as floating point.</comment>
  </data>
  <data name="FormulaColumns_ColumnFormatNotSupported" xml:space="preserve">
    <value>Kolone tipa {0} sa formatom {1} nisu podržane u kolonama sa formulama.</value>
    <comment>Error Message. Used in formula columns for a formula where the maker attempts to use a column from Dataverse that is of a format that not supported, such as whole number formatted as language.</comment>
  </data>
  <data name="FormulaColumns_AggregateCoercionNotSupported" xml:space="preserve">
    <value>Prinuda zapisa ili tabela nije podržana u kolonama formula.</value>
    <comment>Error Message. Used in formula columns for a formula where the maker attempts record-record or table-table coercion.</comment>
  </data>
  <data name="FormulaColumns_SingleColumnTableNotSupported" xml:space="preserve">
    <value>Tabele sa jednom kolonom nisu podržane u kolonama sa formulama.</value>
    <comment>Error Message. Used in formula columns for a formula that references a single-column table.</comment>
  </data>
  <data name="FormulaColumns_VirtualTableNotSupported" xml:space="preserve">
    <value>Nije moguće postaviti virtuelnu tabelu {0} kao referencu u kolonama formula.</value>
    <comment>Error Message. Used in formula columns for a formula that references a virtual table.</comment>
  </data>
  <data name="FormulaColumns_TextNumberMissingFormat" xml:space="preserve">
    <value>Uključite format u drugi argument kada koristite funkciju „Tekst“ sa brojevima. Niska formata ne može da sadrži znak za razdvajanje hiljada ili decimala u kolonama formula.</value>
    <comment>Error Message. Used in formula columns for Text of a number without a format string.</comment>
  </data>
  <data name="FormulaColumns_ImplicitNumberToText" xml:space="preserve">
    <value>Koristite funkciju „Tekst“ da biste konvertovali brojeve u tekst. Uključite format u drugi argument koji ne može da sadrži znak za razdvajanje hiljada ili decimala u kolonama formula.</value>
    <comment>Error Message. Used in formula columns for implicit conversion of number to text.</comment>
  </data>
  <data name="FormulaColumns_RelatedCurrency" xml:space="preserve">
    <value>Izračunavanja sa kolonama valuta u povezanim tabelama trenutno nisu podržana u kolonama formula.</value>
    <comment>Error Message. Used in formula columns when a currency field is referenced on a related table, not currently supported.</comment>
  </data>
  <data name="FormulaColumns_DirectCurrencyNotSupported" xml:space="preserve">
    <value>Direktna upotreba polja valute još uvek nije podržana. Koristite format Decimal(CurrencyField) kao zaobilazno rešenje, ali imajte u vidu da decimalni broj ima manji opseg od valute.</value>
    <comment>Error Message. Used in formula columns for a formula that uses currency fields directly expression.</comment>
  </data>
  <data name="FormulaColumns_RelatedEntityOptionSetNotSupported" xml:space="preserve">
    <value>Skup opcija sa nazivom {0} iz povezanih tabela trenutno nije podržan u kolonama sa formulama.</value>
    <comment>Error Message. Used in formula columns for a formula that uses OptionSet from related tables.</comment>
  </data>
  <data name="FormulaColumns_InvalidOptionSet" xml:space="preserve">
    <value>Metapodaci za skup opcija sa nazivom {0} nisu pronađeni.</value>
    <comment>Error Message. Used in formula columns when optionset info is not found.</comment>
  </data>
  <data name="FormulaColumns_ResultFromMultipleOptionSetsNotSupported" xml:space="preserve">
    <value>Operaciju nije moguće izvršiti na više skupova opcija. Koristite jedan skup opcija kao tip rezultata.</value>
    <comment>Error Message. Used when formula columns use multiple optionsets as result.</comment>
  </data>
</root>