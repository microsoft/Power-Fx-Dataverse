<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="DV_resmimetype">text/microsoft-resx</resheader>
    <resheader name="DV_version">2.0</resheader>
    <resheader name="DV_reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="DV_writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="FormulaColumns_NotSupported" xml:space="preserve">
    <value>Non se admite nas columnas de fórmula.</value>
    
  </data>
  <data name="FormulaColumns_MathFunctionBadArity" xml:space="preserve">
    <value>Número non válido de argumentos para a función {0}: recibíronse {1}, esperábanse {2}</value>
    
  </data>
  <data name="FormulaColumns_ArgNotSupported" xml:space="preserve">
    <value>O argumento {0} non é compatible coa función {1} nas columnas de fórmula.</value>
    
  </data>
  <data name="FormulaColumns_ArgTypeNotSupported" xml:space="preserve">
    <value>Este argumento non se pode pasar como este tipo nas columnas de fórmula.</value>
    
  </data>
  <data name="FormulaColumns_ArgumentTypeNotSupported" xml:space="preserve">
    <value>Este argumento non se pode pasar como tipo {0} nas columnas de fórmula.</value>
    
  </data>
  <data name="FormulaColumns_LiteralArgRequired" xml:space="preserve">
    <value>Só un valor literal é compatible con este argumento.</value>
    
  </data>
  <data name="FormulaColumns_TimeZoneConversion" xml:space="preserve">
    <value>{0} non se pode realizar nesta entrada sen unha conversión de fuso horario, que non se admite nas columnas de fórmula.</value>
    
  </data>
  <data name="FormulaColumns_IncompatibleDateTimes" xml:space="preserve">
    <value>Esta operación non se pode realizar en valores de comportamentos de data e hora diferentes.</value>
    
  </data>
  <data name="FormulaColumns_DateTimeFormatNotSupported" xml:space="preserve">
    <value>Nas columnas de fórmula só se admiten cadeas de formato de data e hora curtas.</value>
    
  </data>
  <data name="FormulaColumns_InvalidTimeUnit" xml:space="preserve">
    <value>O argumento {0} é unha unidade de tempo que non se admite ou non é válida para a función aritmética de data {1}.</value>
    
  </data>
  <data name="FormulaColumns_NumericFormatNotSupported" xml:space="preserve">
    <value>Non se admiten tokens de formatación específicos da configuración rexional (como "." e ",") nas columnas de fórmula.</value>
    
  </data>
  <data name="FormulaColumns_FunctionNotSupported" xml:space="preserve">
    <value>Non se admite a función {0} nas columnas de fórmula, use {1} no seu lugar.</value>
    
  </data>
  <data name="FormulaColumns_FunctionSupportDisabled" xml:space="preserve">
    <value>A función {0} non se admite nas columnas de fórmula.</value>
    
  </data>
  <data name="FormulaColumns_OperationNotSupported" xml:space="preserve">
    <value>Esta operación non se pode realizar no tipo {0} nas columnas de fórmula.</value>
    
  </data>
  <data name="FormulaColumns_ResultTypeNotSupported" xml:space="preserve">
    <value>Non se admite o tipo de resultado {0} nas columnas de fórmula.</value>
    
  </data>
  <data name="FormulaColumns_RecordAccessNotSupported" xml:space="preserve">
    <value>Facer referencia de forma directa a un rexistro completo non se admite nas columnas de fórmula. Faga referencia a un campo válido no rexistro.</value>
    
  </data>
  <data name="FormulaColumns_ResultTypeMustMatch" xml:space="preserve">
    <value>O tipo de resultado que se espera para esta fórmula é {0}, pero o tipo de resultado real é {1}. Non se pode modificar o tipo de resultado dunha columna de fórmula.</value>
    
  </data>
  <data name="FormulaColumns_ColumnTypeNotSupported" xml:space="preserve">
    <value>Non se admiten as columnas de tipo {0} nas columnas de fórmula.</value>
    
  </data>
  <data name="FormulaColumns_ColumnFormatNotSupported" xml:space="preserve">
    <value>Non se admiten as columnas de tipo {0} con formato {1} nas columnas de fórmula.</value>
    
  </data>
  <data name="FormulaColumns_AggregateCoercionNotSupported" xml:space="preserve">
    <value>A coerción de rexistros ou táboas non se admite nas columnas de fórmula.</value>
    
  </data>
  <data name="FormulaColumns_SingleColumnTableNotSupported" xml:space="preserve">
    <value>Non se admiten as táboas dunha única columna nas columnas de fórmula.</value>
    
  </data>
  <data name="FormulaColumns_VirtualTableNotSupported" xml:space="preserve">
    <value>Non se pode facer referencia á táboa virtual {0} nas columnas de fórmula.</value>
    
  </data>
  <data name="FormulaColumns_TextNumberMissingFormat" xml:space="preserve">
    <value>Inclúa un formato no segundo argumento ao usar a función Texto con números. A cadea de formato non pode incluír separador de miles nin decimais en columnas de fórmula.</value>
    
  </data>
  <data name="FormulaColumns_ImplicitNumberToText" xml:space="preserve">
    <value>Use a función Texto para converter os números en texto. Inclúa un formato no segundo argumento, que non pode incluír separador de miles nin decimais nas columnas da fórmula.</value>
    
  </data>
  <data name="FormulaColumns_RelatedCurrency" xml:space="preserve">
    <value>Os cálculos con columnas de moeda en táboas relacionadas non se admiten actualmente en columnas de fórmulas.</value>
    
  </data>
  <data name="FormulaColumns_DirectCurrencyNotSupported" xml:space="preserve">
    <value>O uso directo dos campos de moeda aínda non se admite. Use Decimal(CurrencyField) como solución alternativa, pero teña en conta que o decimal ten un intervalo menor que a moeda.</value>
    
  </data>
</root>