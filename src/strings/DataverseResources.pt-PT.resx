<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="DV_resmimetype">text/microsoft-resx</resheader>
    <resheader name="DV_version">2.0</resheader>
    <resheader name="DV_reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="DV_writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="FormulaColumns_NotSupported" xml:space="preserve">
    <value>Não suportado em colunas de fórmula.</value>
    
  </data>
  <data name="FormulaColumns_MathFunctionBadArity" xml:space="preserve">
    <value>Número inválido de argumentos para a função {0}: recebido {1}, esperado {2}</value>
    
  </data>
  <data name="FormulaColumns_ArgNotSupported" xml:space="preserve">
    <value>O argumento {0} não é suportado para a função {1} em colunas de fórmula.</value>
    
  </data>
  <data name="FormulaColumns_ArgTypeNotSupported" xml:space="preserve">
    <value>Não é possível transmitir este argumento com este tipo em colunas de fórmula.</value>
    
  </data>
  <data name="FormulaColumns_ArgumentTypeNotSupported" xml:space="preserve">
    <value>Não é possível transmitir este argumento com o tipo {0} em colunas de fórmula.</value>
    
  </data>
  <data name="FormulaColumns_LiteralArgRequired" xml:space="preserve">
    <value>Este argumento só suporta um valor literal.</value>
    
  </data>
  <data name="FormulaColumns_TimeZoneConversion" xml:space="preserve">
    <value>Não é possível efetuar {0} nesta entrada sem uma conversão de fuso horário, que não é suportada em colunas de fórmula.</value>
    
  </data>
  <data name="FormulaColumns_IncompatibleDateTimes" xml:space="preserve">
    <value>Não é possível efetuar esta operação em valores que têm Comportamentos de Data/Hora diferentes.</value>
    
  </data>
  <data name="FormulaColumns_DateTimeFormatNotSupported" xml:space="preserve">
    <value>As colunas de fórmula só suportam cadeias no formato data e hora abreviada.</value>
    
  </data>
  <data name="FormulaColumns_InvalidTimeUnit" xml:space="preserve">
    <value>O argumento {0} é uma unidade de tempo inválida/não suportada para a função aritmética de data {1}.</value>
    
  </data>
  <data name="FormulaColumns_NumericFormatNotSupported" xml:space="preserve">
    <value>Tokens de formatação específicos da região, como "." e ",", não são suportados em colunas de fórmula.</value>
    
  </data>
  <data name="FormulaColumns_FunctionNotSupported" xml:space="preserve">
    <value>{0} não é suportado em colunas de fórmula. Utilize {1} em vez disso.</value>
    
  </data>
  <data name="FormulaColumns_FunctionSupportDisabled" xml:space="preserve">
    <value>{0} não é suportado em colunas de fórmula.</value>
    
  </data>
  <data name="FormulaColumns_OperationNotSupported" xml:space="preserve">
    <value>Não é possível efetuar esta operação no tipo {0} em colunas de fórmula.</value>
    
  </data>
  <data name="FormulaColumns_ResultTypeNotSupported" xml:space="preserve">
    <value>O tipo de resultado {0} não é suportado em colunas de fórmula.</value>
    
  </data>
  <data name="FormulaColumns_RecordAccessNotSupported" xml:space="preserve">
    <value>A referenciação direta de um registo inteiro não é suportada em colunas de fórmula. Referencie um campo válido no registo.</value>
    
  </data>
  <data name="FormulaColumns_ResultTypeMustMatch" xml:space="preserve">
    <value>É esperado que o tipo de resultado desta fórmula seja {0}, mas o tipo de resultado real é {1}. Não é possível alterar o tipo de resultado de uma coluna de fórmula.</value>
    
  </data>
  <data name="FormulaColumns_ColumnTypeNotSupported" xml:space="preserve">
    <value>As colunas do tipo {0} não são suportadas em colunas de fórmula.</value>
    
  </data>
  <data name="FormulaColumns_ColumnFormatNotSupported" xml:space="preserve">
    <value>As colunas do tipo {0} com o formato {1} não são suportadas em colunas de fórmula.</value>
    
  </data>
  <data name="FormulaColumns_AggregateCoercionNotSupported" xml:space="preserve">
    <value>Forçar registos ou tabelas não é suportado em colunas de fórmula.</value>
    
  </data>
  <data name="FormulaColumns_SingleColumnTableNotSupported" xml:space="preserve">
    <value>As tabelas de coluna única não são suportadas em colunas de fórmula.</value>
    
  </data>
  <data name="FormulaColumns_VirtualTableNotSupported" xml:space="preserve">
    <value>Não é possível referenciar a tabela virtual {0} em colunas de fórmula.</value>
    
  </data>
  <data name="FormulaColumns_TextNumberMissingFormat" xml:space="preserve">
    <value>Inclua um formato no segundo argumento quando utilizar a função Texto com números. A cadeia de formato não pode incluir separadores decimais ou de milhares em colunas de fórmula.</value>
    
  </data>
  <data name="FormulaColumns_ImplicitNumberToText" xml:space="preserve">
    <value>Utilize a função Texto para converter números em texto. Inclua um formato no segundo argumento que não pode incluir um separador decimal ou de milhares em colunas de fórmula.</value>
    
  </data>
  <data name="FormulaColumns_RelatedCurrency" xml:space="preserve">
    <value>Os cálculos com colunas de moeda em tabelas relacionadas não são atualmente suportados em colunas de fórmula.</value>
    
  </data>
  <data name="FormulaColumns_DirectCurrencyNotSupported" xml:space="preserve">
    <value>A utilização direta de campos de moeda ainda não é suportada. Utilize Decimal(CurrencyField) como solução alternativa, mas note que decimal tem um intervalo menor que currency.</value>
    
  </data>
  <data name="FormulaColumns_RelatedEntityOptionSetNotSupported" xml:space="preserve">
    <value>O Conjunto de Opções com o nome {0} das tabelas relacionadas não é atualmente suportado em colunas de fórmula.</value>
    
  </data>
  <data name="FormulaColumns_InvalidOptionSet" xml:space="preserve">
    <value>Os metadados do Conjunto de Opções com o nome {0} não foram encontrados.</value>
    
  </data>
  <data name="FormulaColumns_ResultFromMultipleOptionSetsNotSupported" xml:space="preserve">
    <value>Não é possível efetuar a operação em vários Conjuntos de Opções. Utilize um só Conjunto de Opções como tipo de resultado.</value>
    
  </data>
</root>