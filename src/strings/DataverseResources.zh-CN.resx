<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="DV_resmimetype">text/microsoft-resx</resheader>
    <resheader name="DV_version">2.0</resheader>
    <resheader name="DV_reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="DV_writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="FormulaColumns_NotSupported" xml:space="preserve">
    <value>在公式列中不受支持。</value>
    
  </data>
  <data name="FormulaColumns_MathFunctionBadArity" xml:space="preserve">
    <value>{0} 函数的参数数目无效: 收到 {1} 个，应为 {2} 个</value>
    
  </data>
  <data name="FormulaColumns_ArgNotSupported" xml:space="preserve">
    <value>公式列中的 {1} 函数不支持 {0} 参数。</value>
    
  </data>
  <data name="FormulaColumns_ArgTypeNotSupported" xml:space="preserve">
    <value>此参数不能作为公式列中的此类型进行传递。</value>
    
  </data>
  <data name="FormulaColumns_ArgumentTypeNotSupported" xml:space="preserve">
    <value>此参数不能作为公式列中的类型 {0} 进行传递。</value>
    
  </data>
  <data name="FormulaColumns_LiteralArgRequired" xml:space="preserve">
    <value>此参数仅支持文字值。</value>
    
  </data>
  <data name="FormulaColumns_TimeZoneConversion" xml:space="preserve">
    <value>如果没有时区转换，则无法对此输入执行 {0}，而公式列不支持时区转换。</value>
    
  </data>
  <data name="FormulaColumns_IncompatibleDateTimes" xml:space="preserve">
    <value>无法对具有不同日期时间行为的值执行此操作。</value>
    
  </data>
  <data name="FormulaColumns_DateTimeFormatNotSupported" xml:space="preserve">
    <value>公式列仅支持短日期和时间格式字符串。</value>
    
  </data>
  <data name="FormulaColumns_InvalidTimeUnit" xml:space="preserve">
    <value>{0} 参数是 {1} 日期算术函数的无效/不受支持的时间单位。</value>
    
  </data>
  <data name="FormulaColumns_NumericFormatNotSupported" xml:space="preserve">
    <value>公式列中不支持特定于区域设置的格式标记，例如 "." 和 ","。</value>
    
  </data>
  <data name="FormulaColumns_FunctionNotSupported" xml:space="preserve">
    <value>公式列中不支持 {0}，请改用 {1}。</value>
    
  </data>
  <data name="FormulaColumns_FunctionSupportDisabled" xml:space="preserve">
    <value>公式列中不支持 {0}。</value>
    
  </data>
  <data name="FormulaColumns_OperationNotSupported" xml:space="preserve">
    <value>无法对公式列中的类型 {0} 执行此操作。</value>
    
  </data>
  <data name="FormulaColumns_ResultTypeNotSupported" xml:space="preserve">
    <value>公式列中不支持结果类型 {0}。</value>
    
  </data>
  <data name="FormulaColumns_RecordAccessNotSupported" xml:space="preserve">
    <value>公式列中不支持直接引用整个记录。请引用记录中的有效字段。</value>
    
  </data>
  <data name="FormulaColumns_ResultTypeMustMatch" xml:space="preserve">
    <value>此公式的结果类型预计为 {0}，但实际结果类型为 {1}。无法更改公式列的结果类型。</value>
    
  </data>
  <data name="FormulaColumns_ColumnTypeNotSupported" xml:space="preserve">
    <value>公式列不支持类型为 {0} 的列。</value>
    
  </data>
  <data name="FormulaColumns_ColumnFormatNotSupported" xml:space="preserve">
    <value>公式列不支持类型为 {0} 且格式为 {1} 的列。</value>
    
  </data>
  <data name="FormulaColumns_AggregateCoercionNotSupported" xml:space="preserve">
    <value>公式列中不支持强制记录或表格。</value>
    
  </data>
  <data name="FormulaColumns_SingleColumnTableNotSupported" xml:space="preserve">
    <value>公式列中不支持单列表。</value>
    
  </data>
  <data name="FormulaColumns_VirtualTableNotSupported" xml:space="preserve">
    <value>公式列中无法引用虚拟表 {0}。</value>
    
  </data>
  <data name="FormulaColumns_TextNumberMissingFormat" xml:space="preserve">
    <value>将文本函数与数字一起使用时，请在第二个参数中包括一种格式。格式字符串不能在公式列中包含千位或小数分隔符。</value>
    
  </data>
  <data name="FormulaColumns_ImplicitNumberToText" xml:space="preserve">
    <value>使用文本函数将数字转换为文本。请在第二个参数中包含格式，该格式不能在公式列中包含千位或小数分隔符。</value>
    
  </data>
  <data name="FormulaColumns_RelatedCurrency" xml:space="preserve">
    <value>公式列当前不支持使用相关表中的货币列进行计算。</value>
    
  </data>
  <data name="FormulaColumns_DirectCurrencyNotSupported" xml:space="preserve">
    <value>尚不支持直接使用货币字段。请使用小数(CurrencyField)作为一种解决方法，但请注意，小数的范围小于货币的范围。</value>
    
  </data>
  <data name="FormulaColumns_RelatedEntityOptionSetNotSupported" xml:space="preserve">
    <value>目前，公式列中不支持相关表中名称为 {0} 的选项集。</value>
    
  </data>
  <data name="FormulaColumns_InvalidOptionSet" xml:space="preserve">
    <value>未找到名称为 {0} 的选项集的元数据。</value>
    
  </data>
  <data name="FormulaColumns_ResultFromMultipleOptionSetsNotSupported" xml:space="preserve">
    <value>无法对多个选项集执行该操作。请使用单个选项集作为结果类型。</value>
    
  </data>
</root>