// SQL-specific tests

// IsError inside If
>> If(true, IsError(1/0 + 1))
true

>> If(IsError(1/0), 1, 2)
1

>> Switch(IsError(1/0), true, 1, 2)
1

// If inside IsError
>> IsError(If(false, 1/0, 1/0))
true 

>> IsError(If(true, 1/0, 1/0))
true

>> IsError(Switch(1, 1, 1/0, 1/0))
true

// IsError inside If inside IsError
>> IsError(If(false, IsError(1/0), IsError(1/0)))
false

>> IsError(1/2 + 1) && IsError(1/0)
false

>> IsError(1/2 + 2)
false

>> IsError(1/0 + 1)
true

>> IfError(If(true, 1/0, 1/0), 2)
2

>> IsError(If(IfError(1/0 = 1, true), 1/0, 1/0))
true

>> RoundUp(1, -200)
Error()

>> RoundUp(1, -10)
10000000000

>> ROUNDUP(1,-11)
Error()

// literal overflow
>> 1E37
Error()

>> IsError(1E37)
true


// check string literals are sanitized
>> "Robert '; DROP TABLE Students; --"
"Robert '; DROP TABLE Students; --"

// check SQL wildcards are handled
>> "%_" in "SQL wildcards"
false

//Test decimal arithmetic + precision
>> -43.3285467387 + 19.1232549
-24.2052918389

>> -43.3285467387 - 19.1232549
-62.4518016387

>> 0.233493931 * 2.123597820
0.4958472029

>> 0.233493931 / 2.123597820
0.1099520487

// ensure Substitute is case sensitive
>> Substitute("HelloHELLOhello", "he", "je")
"HelloHELLOjello"

>> Substitute("HelloHelloHello", "he", "je", 2)
"HelloHelloHello"

>> Substitute("HelloHELLOhelloHelloHELLOhello", "he", "je", 2)
"HelloHELLOhelloHelloHELLOjello"